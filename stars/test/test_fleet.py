import unittest
from .. import *
class FleetCase(unittest.TestCase):
    def test_start(self):
        p = player.Player()
        self.ship_1 = ship.Ship(location=location.Location(), cargo=cargo.Cargo(titanium=100, cargo_max=200), fuel=0, fuel_max=0)
        self.ship_2 = ship.Ship(location=location.Location(), cargo=cargo.Cargo(people=100, cargo_max=200), fuel=0, fuel_max=0)
        self.fleet_one = fleet.Fleet(player=reference.Reference(p), ships=[self.ship_1, self.ship_2], cargo=cargo.Cargo(titanium=0, lithium=0, silicon=0, people=0, cargo_max=0), fuel=0, fuel_max=0)
        self.ship_3 = ship.Ship(location=location.Location(), cargo=cargo.Cargo(silicon=100, cargo_max=100), fuel=0, fuel_max=0)
        self.ship_4 = ship.Ship(location=location.Location(), cargo=cargo.Cargo(lithium=100, cargo_max=300), fuel=0, fuel_max=0)
        self.fleet_two = fleet.Fleet(player=reference.Reference(p), ships=[self.ship_3, self.ship_4], waypoints=[waypoint.Waypoint(actions=['merge', 'load', 'unload'], transfers={'unload':[['lithium', 60], ['silicon', 40]], 'load':[['titanium', 60], ['people', 40]]}, recipiants={'merge':self.fleet_one, 'load':self.fleet_one, 'unload':self.fleet_one}, location=location.Location(x=self.fleet_one.location.x, y=self.fleet_one.location.y, z=self.fleet_one.location.z))], cargo=cargo.Cargo(titanium=0, lithium=0, silicon=0, people=0, cargo_max=0), fuel=0, fuel_max=0)
        self.assertEqual(self.ship_1.cargo.titanium, 50)
        self.assertEqual(self.ship_1.cargo.people, 50)
        self.assertEqual(self.ship_2.cargo.titanium, 50)
        self.assertEqual(self.ship_2.cargo.people, 50)
        self.assertEqual(self.ship_3.cargo.lithium, 25)
        self.assertEqual(self.ship_3.cargo.silicon, 25)
        self.assertEqual(self.ship_4.cargo.lithium, 75)
        self.assertEqual(self.ship_4.cargo.silicon, 75)
    def test_merge(self):
        self.test_start()
        self.fleet_two.execute('merge')
        self.assertEqual(self.ship_1.cargo.titanium, 25)
        self.assertEqual(self.ship_1.cargo.people, 25)
        self.assertEqual(self.ship_1.cargo.lithium, 25)
        self.assertEqual(self.ship_1.cargo.silicon, 25)
        self.assertEqual(self.ship_2.cargo.titanium, 25)
        self.assertEqual(self.ship_2.cargo.people, 25)
        self.assertEqual(self.ship_2.cargo.lithium, 25)
        self.assertEqual(self.ship_2.cargo.silicon, 25)
        self.assertEqual(self.ship_3.cargo.titanium, 13)
        self.assertEqual(self.ship_3.cargo.people, 12)
        self.assertEqual(self.ship_3.cargo.lithium, 12)
        self.assertEqual(self.ship_3.cargo.silicon, 13)
        self.assertEqual(self.ship_4.cargo.titanium, 37)
        self.assertEqual(self.ship_4.cargo.people, 38)
        self.assertEqual(self.ship_4.cargo.lithium, 38)
        self.assertEqual(self.ship_4.cargo.silicon, 37)
    def test_transfer(self):
        self.test_start()
        self.fleet_two.execute('load')
        self.assertEqual(self.ship_1.cargo.titanium, 20)
        self.assertEqual(self.ship_1.cargo.people, 30)
        self.assertEqual(self.ship_1.cargo.lithium, 0)
        self.assertEqual(self.ship_1.cargo.silicon, 0)
        self.assertEqual(self.ship_2.cargo.titanium, 20)
        self.assertEqual(self.ship_2.cargo.people, 30)
        self.assertEqual(self.ship_2.cargo.lithium, 0)
        self.assertEqual(self.ship_2.cargo.silicon, 0)
        self.assertEqual(self.ship_3.cargo.titanium, 15)
        self.assertEqual(self.ship_3.cargo.people, 10)
        self.assertEqual(self.ship_3.cargo.lithium, 25)
        self.assertEqual(self.ship_3.cargo.silicon, 25)
        self.assertEqual(self.ship_4.cargo.titanium, 45)
        self.assertEqual(self.ship_4.cargo.people, 30)
        self.assertEqual(self.ship_4.cargo.lithium, 75)
        self.assertEqual(self.ship_4.cargo.silicon, 75)
        self.fleet_two.execute('unload')
        self.assertEqual(self.ship_1.cargo.titanium, 20)
        self.assertEqual(self.ship_1.cargo.people, 30)
        self.assertEqual(self.ship_1.cargo.lithium, 30)
        self.assertEqual(self.ship_1.cargo.silicon, 20)
        self.assertEqual(self.ship_2.cargo.titanium, 20)
        self.assertEqual(self.ship_2.cargo.people, 30)
        self.assertEqual(self.ship_2.cargo.lithium, 30)
        self.assertEqual(self.ship_2.cargo.silicon, 20)
        self.assertEqual(self.ship_3.cargo.titanium, 15)
        self.assertEqual(self.ship_3.cargo.people, 10)
        self.assertEqual(self.ship_3.cargo.lithium, 10)
        self.assertEqual(self.ship_3.cargo.silicon, 15)
        self.assertEqual(self.ship_4.cargo.titanium, 45)
        self.assertEqual(self.ship_4.cargo.people, 30)
        self.assertEqual(self.ship_4.cargo.lithium, 30)
        self.assertEqual(self.ship_4.cargo.silicon, 45)
